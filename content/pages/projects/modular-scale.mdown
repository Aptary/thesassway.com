Date: 18 August 2013
Categories: projects
Author: Adam Stacoviak
Summary: Have you been wanting to design with modular scales, but the math and static-ness of CSS has held you back? Modular Scale is a Sass mixin that does all the heavy lifting and math for you to calculate the values of the modular scale. So put down the calculator and get excited about "prearranged sets of harmonious proportions" and let Sass do the work!

# Modular Scale: Inspired by and adapted from Tim Brown's modularscale.com

Have you been wanting to design with modular scales, but the math and static-ness of CSS has held you back? Well, put down the calculator and get excited about "prearranged sets of harmonious proportions" and let Sass do the work!

## Who is Tim Brown?

Tim Brown is Type Manager for [Typekit](http://typekit.com/). He studies, promotes, and advances the craft of web typography on a daily basis, shares what he knows at [Nice Web Type](http://nicewebtype.com/), and helps web designers with tools like [Web Font Specimen](http://webfontspecimen.com/) and [Modular Scale](http://modularscale.com/). You can follow Tim on Twitter [@nicewebtype](http://twitter.com/nicewebtype) (we do).

## What is Modular Scale?

Just over 9 months ago, Tim gave his "first ever" talk in front of an audience at [Build](http://www.buildconference.com/) titled ["More Perfect Typography"](http://vimeo.com/17079380) where he talked about the history and craft of typesetting and how it is the center-piece of design.

<blockquote cite="http://vimeo.com/17079380">
<p>Typography is an ancient art and craft; we are merely its latest practitioners. By looking to our tradition for guidance, we might once more attain our finest typographic achievements in this new medium.</p>
<footer>â€” <a href="http://nicewebtype.com/">Tim Brown</a> in <cite><a href="http://vimeo.com/17079380">More Perfect Typography</a></cite></footer>
</blockquote>

5 months later, Tim wrote an *eye opening* article on A List Apart titled ["More Meaningful Typography"](http://www.alistapart.com/articles/more-meaningful-typography/) that expanded that talk even further to bring up the golden mean (also known as the [golden ratio](http://en.wikipedia.org/wiki/Golden_ratio) or golden section) and how meaningful ratios rooted in geometry, music, nature, and history can be expressed as modular scales and put to work on the web.

## Sassy Modular Scale

Sassy Modular Scale is a fresh new Sass project that takes inspiration from Tim's [modularscale.com](http://modularscale.com/) project to create a number of mixins and functions to do all the math and heavy lifting for you to calculate the values of a modular scale.

### Installation

To use Sassy Modular Scale in your project, you have the option of installing it as a Compass extension or as a vanilla Sass mixin.

#### Install as a Compass extension (ruby gem)

In terminal, type `gem install modular-scale`. Then add `require 'modular-scale'` to your Compass config file.

#### Alternative installation (without Compass)

Copy `stylesheets/_modular-scale.sass` into your project's Sass directory. Then import the file into your Sass stylesheet to access the mixins and functions. For example, `@import vendor/modular-scale`.

### Usage

Sassy Modular Scale can be used as a function, mixin or a mixin that generates a range of classes to `@extend`. Here are a few examples below using the Sass syntax.

#### Function

Fill in the multiple, base-size, and ratio.

    // modular-scale([$multiple], [$base-size], [$ratio])
    height: modular-scale(7, 14px, $golden)
    
#### Mixin
    
Fill in the property, multiple, base-size, and ratio.

    // +modular-scale([$propert], [$multiple], [$base-size], [$ratio])
    +modular-scale(line-height, 1, 14px, $golden)
    
#### Mixin to generate a range of classes

    +modular-scale-classes(6)
    
... and here is the output CSS from the above mixin.

    [role="main"]
      h1
        @extend .ms-2
      h2
        @extend .ms-1
      h3
        @extend .ms-0
        
#### Lace ratios together

You can also "lace" multiple ratios together by passing many ratios in as a space-separated list.

    .lace
      width: ms(7, 14px, $golden $fourth)